import{o as e,c as r,a as t}from"./app.5f046f61.js";const s='{"title":"MD模板","description":"","frontmatter":{"title":"MD模板"},"headers":[{"level":3,"title":"vitepress生成静态网站","slug":"vitepress生成静态网站"},{"level":3,"title":"挂上github，白嫖个静态服务器","slug":"挂上github，白嫖个静态服务器"},{"level":3,"title":"以cv工程师之名再进一步","slug":"以cv工程师之名再进一步"}],"relativePath":"index.md","lastUpdated":1629947910846}',a={},n=[t('<h1 id="用vitepress构建自己的markdown-blog"><a class="header-anchor" href="#用vitepress构建自己的markdown-blog" aria-hidden="true">#</a> 用vitepress构建自己的Markdown blog</h1><p>不是提桶就是在提桶的路上，刷面试题，顺便在git上记录一下成果写在简历上。 <br></p><h3 id="vitepress生成静态网站"><a class="header-anchor" href="#vitepress生成静态网站" aria-hidden="true">#</a> vitepress生成静态网站</h3><h5 id="参考资料"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h5><ul><li><a href="https://vitepress.vuejs.org/guide/getting-started.html" target="_blank" rel="noopener noreferrer">vitepress官网</a></li><li>中文文档可以参考<a href="https://v2.vuepress.vuejs.org/zh/guide/" target="_blank" rel="noopener noreferrer">vuepress2.0的文档</a></li></ul><br><h3 id="挂上github，白嫖个静态服务器"><a class="header-anchor" href="#挂上github，白嫖个静态服务器" aria-hidden="true">#</a> 挂上github，白嫖个静态服务器</h3><p><a href="https://pages.github.com/" target="_blank" rel="noopener noreferrer">github pages</a></p><p>教程已经很清晰啦，把项目打包后的生成物上传上去就行了。</p><h3 id="以cv工程师之名再进一步"><a class="header-anchor" href="#以cv工程师之名再进一步" aria-hidden="true">#</a> 以cv工程师之名再进一步</h3><p>做完上面的步骤，但是每次要把dist文件夹上传到github上这么麻烦，当然要再折腾一下。这就要用到<a href="https://docs.github.com/cn/actions" target="_blank" rel="noopener noreferrer">github actions</a>了。</p><p>经过官网一轮洗礼，决定还是回归cv本质的可以看下去。</p><ul><li>创建代码仓库，这个仓库用来放项目代码，上面所说的仓库用来放项目代码的产出物dist。 例如 新建仓库xxxx.github.io.source</li></ul><h5 id="以下步骤参考github-actions的插件vuepress-deploy"><a class="header-anchor" href="#以下步骤参考github-actions的插件vuepress-deploy" aria-hidden="true">#</a> 以下步骤参考github actions的插件<a href="https://github.com/jenkey2011/vuepress-deploy/blob/master/README.zh-CN.md" target="_blank" rel="noopener noreferrer">vuepress-deploy</a></h5><ul><li><p>创建token:<br> 点击你的头像 &gt; Settings &gt; Developer settings &gt; Personal access tokens &gt; Generate new token. 权限至少要勾选repo。<strong>记得保存好这个值</strong></p></li><li><p>创建secrets: 你的 <strong>vitepress项目</strong> 源码仓库下（即项目仓库） &gt; Settings &gt; Secrets， 创建ACCESS_TOKEN， 值就填写你刚才创建的token，确定。</p></li><li><p>上传代码后，在线上仓库上打开Actions，选择 <code>set up a workflw yourself</code> 新建一个yml文件，例如deloy.yml，内容：</p></li></ul><div class="language-"><pre><code>name: Build and Deploy\non: [push]\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@master\n    - name: vuepress-deploy\n      uses: jenkey2011/vuepress-deploy@master\n      env:\n        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}\n#       //ACCESS_TOKEN 是生成的token名称，注意换成自己的\n        TARGET_REPO: username/repo\n        TARGET_BRANCH: master\n        BUILD_SCRIPT: yarn &amp;&amp; yarn build\n        BUILD_DIR: dosc/.vite/dist/\n#       //这里目录指向生成物目录\n</code></pre></div><p>push后自动构建，访问你的主页吧。 enjoy</p>',17)];a.render=function(t,s,a,i,o,l){return e(),r("div",null,n)};export{s as __pageData,a as default};
